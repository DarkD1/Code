; INPUT STRING FROM USER AND DISPLAY

.MODEL SMALL
.STACK 100H

.DATA              ; DATA SEGMENT  

    MESSAGE DB 50 dup("$") 
    
.CODE              ; CODE SEGMENT   

MAIN PROC          ; INT MAIN()
                
    MOV AX, @DATA ; INIT. DATA SEGMENT
    MOV DS, AX            
    
    
    MOV SI, OFFSET MESSAGE   ; MOVING THE ARRAY MESSAGE ADDRESS TO SOURCE INDEX
    
    TAKEINPUT:
    MOV AH, 1   ; TAKING CHAR FROM USER
    INT 21H
    
    CMP AL, 13   ; COMPARING IF THE CHARACTER IS 'ENTER' OR NOT 
    JE ENDOFINPUT ; IF ENTER IS PRESSED THEN JUMP TO ENDOFINPUT
    
    MOV [SI], AL ; STORING THE USER CHAR INTO SOURCE INDEX
    INC SI       ; INCREMENTING THE SOURCE INDEX
    JMP TAKEINPUT ; GOING BACK TO TAKE ANOTHER CHAR FROM USER
    
    
    ENDOFINPUT:
    ; NEW LINE
    MOV AH, 2
    MOV DL, 0AH
    INT 21H
    MOV DL, 0DH
    INT 21H
    
    ; DISPLAY STRING
    MOV AH, 9
    LEA DX, MESSAGE
    INT 21H
       
    ; RETURN 0
    MOV AH, 4CH
    INT 21H   
    
    MAIN ENDP  

END MAIN 